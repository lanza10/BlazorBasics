<div class="modal fade" id="deleteConfirmationModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Delete Confirmation</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" @onclick="() => OnChangeConfirmation(false)"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete it?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" @onclick="() => OnChangeConfirmation(false)">Cancel</button>
                @if (IsProcessing)
                {
                    <button type="button" class="btn btn-danger">
                        Processing...
                    </button>
                }
                else
                {
                    <button type="button" class="btn btn-danger" @onclick="() => OnChangeConfirmation(true)">
                        <i class="bi bi-trash-fill"></i>&nbsp; Delete
                    </button>
                }
                
            </div>
        </div>
    </div>
</div>
@code {
    public bool IsProcessing { get; set; } = false;
    [Parameter]
    public EventCallback<bool> ConfirmationChange { get; set; }
    
    [Parameter]
    public bool ParentIsProcessing { get; set; }

    protected override void OnParametersSet()
    {
        IsProcessing = ParentIsProcessing;
    }

    protected async Task OnChangeConfirmation(bool value)
    { 
        IsProcessing = value;
        await ConfirmationChange.InvokeAsync(value);
    }
}